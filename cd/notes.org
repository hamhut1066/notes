Lecture 2
----

2^4 Boolean Input functions for a 2-input boolean function

2^(2^n) functions for N-input boolean function


given inputs x, y, a & b. define f(x, y, a, b) such that f delivers x when a = b and y when a != b

f = ( a == b) ? x : y;

f = (((a.b) + (~a.~b)).x) + (((a.~b) + (~a.b)).y)

the above two function definitions are equivalent.

* Implementation Goals
** Minimize DELAY, AREA and ENERGY
** Minimize no of gates
** Minimize no of gate inputs (fan-in)
** Minimize no of gates attachet to each output (fan-out)
** Minimum propogation delay
** Minimum chip area
** Minimum Power Con


* Simplification of Boolean Algebra
** Apply Algebraic simplifications
** generate:
*** Sum of Products
*** Product of Sums

* Use logic laws to simplify boolean expressions
** Deductive Simplification
*** fine for easy examples
*** can become complex for larger expressions


* Karnaugh Maps
** TODO Look at map variables (Computer Design)
*** do some examples
** Diagram of squares

*** each square represents a minterm


solution for (m1 + m2)
|    | y0 | y1 |
| x0 | 0  | 1  |
| x1 | 1  | 1  |
** Prime Implicant
*** Product term obtained by combining the maximum possible number of adjacent squares.
* NAND and NOR gates
** both are extremely efficient
** Are used to create other gates
** NAND gates are generic. (as with NOR)
